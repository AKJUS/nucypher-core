import wasm from "./pkg/nucypher_core_wasm_bg.wasm";
import init, { InitInput } from "./pkg/nucypher_core_wasm.js";

let initialized: Promise<void> | undefined = undefined;
export const initialize = async (maybeWasm?: InitInput) => {
  if (initialized === undefined) {
    // We're using a Promise to make sure that the WASM module is properly recognized by the JS code
    // generated by wasm-pack:
    //                                                 V here
    // const { instance, module } = await __wbg_load(await input, imports);
    // Ignoring "expression not callable" error
    // @ts-ignore
    const wasmPromise = Promise.resolve(maybeWasm ? maybeWasm : wasm());
    initialized = init(wasmPromise).then(() => void 0);
  }
  await initialized;
};
